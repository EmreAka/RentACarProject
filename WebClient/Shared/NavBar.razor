@using RentACarBlazorServer.Models
@inject NavigationManager NavigationManager
@inject ILocalStorageService localStorage
@inject AuthenticationStateProvider AuthStateProvider

<MudAppBar Color="Color.Dark" Fixed="true">
    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" />
    <MudText Typo="Typo.h5" Style="margin-left: 1rem; cursor: pointer;" @onclick="NavigateToHomeComponent">Aka Rental</MudText>
    <MudSpacer />
    @*<MudIconButton Icon="@Icons.Filled.Person" Color="Color.Inherit" />*@

    <AuthorizeView>
        <Authorized>
            @*<MudButton Color="Color.Success" @onclick="Logout">@context.User.Identity.Name</MudButton>*@
            <MudMenu Color="Color.Secondary" Label="@context.User.Identity.Name" Variant="Variant.Filled" AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight" EndIcon="@Icons.Filled.KeyboardArrowDown" IconColor="Color.Dark">
                <MudMenuItem>Profile</MudMenuItem>
                <MudMenuItem>Rentals</MudMenuItem>
                <MudMenuItem OnClick="@Logout">Logout</MudMenuItem>
            </MudMenu>
        </Authorized>
        <NotAuthorized>
            <div class="button-group-login">
                <MudButtonGroup Color="Color.Secondary" Variant="Variant.Text">
                    <MudButton @onclick="NavigateToCounterComponent">Login</MudButton>
                    <MudButton>Register</MudButton>
                </MudButtonGroup>
            </div>
        </NotAuthorized>
    </AuthorizeView>

</MudAppBar>

@code {
    bool isLoggedIn = false;

    protected override async Task OnInitializedAsync()
    {
        var result = await localStorage.GetItemAsync<TokenDto>("token");
        if (result != null)
        {
            isLoggedIn = true;
        }
    }

    private async Task Logout()
    {
        await localStorage.RemoveItemAsync("token");
        await AuthStateProvider.GetAuthenticationStateAsync();
    }

    private void NavigateToCounterComponent()
    {
        NavigationManager.NavigateTo("login");
    }


    private void NavigateToHomeComponent()
    {
        NavigationManager.NavigateTo("");
    }
}
